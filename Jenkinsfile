pipeline {
    agent any

    environment {
        DISCORD_WEBHOOK_URL = "https://discord.com/api/webhooks/1311544596853166101/BK92iL16-3q27PWyLu45BwRaZZedC86swLC9nAAFFOpcyn0kuceMqH61Zknaxgiwd5hd"
    }

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Preparation') {
            steps {
                script {
                    sh 'sudo apt-get update'
                    sh 'sudo apt-get install -y nmap'
                    sendDiscordNotification("üîß **√âtape 1 : Pr√©paration Termin√©e** ‚úÖ\nLa mise √† jour des d√©pendances a √©t√© effectu√©e et Nmap a √©t√© install√© avec succ√®s. Pr√™t √† lancer le scan !")
                }
            }
        }

        stage('Scan with Nmap') {
            steps {
                script {
                    sh 'sudo nmap -p 80,443,8080 127.0.0.1 -oN /var/lib/jenkins/nmap_scan_results.txt'
                    sendDiscordNotification("üõ†Ô∏è **√âtape 2 : Scan Nmap Termin√©** üïµÔ∏è‚Äç‚ôÇÔ∏è\nLe scan des ports a √©t√© effectu√©. Voici un r√©sum√© des r√©sultats :\n\n```txt\n$(cat /var/lib/jenkins/nmap_scan_results.txt)```.\n\nLes d√©tails complets sont enregistr√©s dans un fichier texte. [Consultez-le ici](file:///var/lib/jenkins/nmap_scan_results.txt).")
                }
            }
        }

        stage('ZAP Scan') {
            steps {
                script {
                    sh 'sudo mkdir -p /var/lib/jenkins/zap_reports'
                    sh 'sudo chown -R jenkins:jenkins /var/lib/jenkins/zap_reports'
                    sh 'sudo chmod -R 755 /var/lib/jenkins/zap_reports'
                    sh 'sudo zaproxy -cmd -quickurl http://localhost:5000 -quickout /var/lib/jenkins/zap_reports/zap_report.html -port 8081'
                    sendDiscordNotification("üö® **√âtape 3 : Scan ZAP Termin√©e** ‚úÖ\nLe scan de s√©curit√© a √©t√© effectu√© avec succ√®s. Un rapport d√©taill√© est disponible.\n\nüîë **Rapport de s√©curit√© ZAP** : [Cliquez ici pour le rapport HTML](file:///var/lib/jenkins/zap_reports/zap_report.html).")
                }
            }
        }

        stage('Post Actions') {
            steps {
                script {
                    echo "Toutes les √©tapes du pipeline sont termin√©es."
                    sendDiscordNotification("üéâ **Pipeline Termin√©e avec succ√®s !** üéâ\nToutes les √©tapes ont √©t√© ex√©cut√©es sans erreur et les rapports ont √©t√© g√©n√©r√©s. V√©rifiez les r√©sultats des scans Nmap et ZAP ci-dessus.")
                }
            }
        }
    }

    post {
        always {
            sendDiscordNotification("üîî **Ex√©cution du Pipeline : ${currentBuild.result}** - ${env.BUILD_URL}\nConsultez le lien vers les r√©sultats du build ci-dessus.")
        }
    }
}

def sendDiscordNotification(String message) {
    sh """
        curl -X POST -H "Content-Type: application/json" \
        -d '{"content": "${message}"}' \
        ${DISCORD_WEBHOOK_URL}
    """
}
